name: Auto Build Python EXE

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:

jobs:
  build-exe:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Cache Dependencies
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build Executable
      run: |
        if ("${{ github.ref_type }}" -eq "tag") {
          $version = "v${{ github.ref_name }}"
        } else {
          $version = "sha-${{ github.sha }}"
        }
        pyinstaller --onefile --add-data "mod_manage/lang/*.yml;mod_manage/lang" --name=MHWildsModManager-noGUI-$version --exclude-module mod_manage.manage_ui --upx-dir --clean cli_entry.py
        pyinstaller --onefile --add-data "mod_manage/lang/*.yml;mod_manage/lang" -w --upx-dir --name=MHWildsModManager-$version --clean gui_entry.py

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: MHWildsModManager-Build-${{ github.sha }}
        path: dist\MHWildsModManager-*.exe

    - name: Publish to Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        files: dist/MHWildsModManager-*.exe